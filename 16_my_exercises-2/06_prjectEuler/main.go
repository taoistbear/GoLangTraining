/*
6. Find a problem at projecteuler.net then create the solution. Add a comment
beneath your solution that includes a description of the problem. Upload your
solution to github. Tweet me (Todd) your solution.
*/

package main

import "fmt"

func main() {
	fmt.Println(fibSumEven())
}

func fibSumEven() int {
	var sum int
	var prev = 1
	var curr = 1
	for i := 1; i <= 32; i++ {
		var next int = (prev + curr)
		if next%2 == 0 {
			sum += next
		}
		prev = curr
		curr = next
	}
	return sum
}

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four
million, find the sum of the even-valued terms.
*/

/*
It was a trial to find my limit for i. There may have been a more eloquent way
of doing this but i ran i for a large number, and counted up how many values of
the Fibonacci Sequence were under 4mil.
*/
